/*
 * ModulatorPinv.hpp
 *
 *  Created on: 24 déc. 2013
 *      Author: Robotique
 */

#ifndef MODULATORPINV_HPP_
#define MODULATORPINV_HPP_

#include <autom/mod/Modulator.hpp>

#define MOD_PINV_SCALE	(1<<16)

namespace autom {

class ModulatorPinv : public Modulator {
public:
	typedef int32_t PInvInflMat[MODULATOR_NB_MOTORS][6];
	typedef int32_t DescentVector[MODULATOR_NB_MOTORS];

protected:
	typedef int32_t MotorCommand[MODULATOR_NB_MOTORS];

public:

	ModulatorPinv(
			const typename Modulator::InfluenceMatrix& inflMat,
			const PInvInflMat& pInv,
			const DescentVector& desc);
	virtual ~ModulatorPinv();

protected:
	/** @brief Calc motor command*/
	virtual void calcMotorCommandPriv(
			const math::Vector3l& force_B,
			const math::Vector3l& torque_B,
			hw::pwm_t* command) ;

	bool scaleLambda0(
			hw::pwm_t* command);
	bool scaleLambda1(
			hw::pwm_t* command);
protected:

	/** @brief Pseudo inverse */
	const PInvInflMat& _pInv;

	/** @brief Descent vector */
	const DescentVector& _desc;
};

} /* namespace autom */

#endif /* MODULATORPINV_HPP_ */
