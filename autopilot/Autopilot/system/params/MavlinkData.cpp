/*
 * MavlinkData.cpp
 *
 *  Created on: 8 nov. 2015
 *      Author: AdministrateurLocal
 */

#include <system/params/MavlinkData.hpp>
#include <system/system/SystemData.hpp>
#include <mode/control/ModeControlData.hpp>

#include <system/params/Nrd.hpp>
#include <system/params/NrdGen.hpp>

#define PARAM(type, name, addr, defVal) { MAV_PARAM_TYPE_##type, name, addr, {type : defVal} }

namespace system {

PROGMEM const mavlink::ParameterMgt::ParamInfo info[] = {
		PARAM(UINT16,"RD_MIN_0", (void*)&paramRadio.pwmMin[0], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_1", (void*)&paramRadio.pwmMin[1], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_2", (void*)&paramRadio.pwmMin[2], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_3", (void*)&paramRadio.pwmMin[3], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_4", (void*)&paramRadio.pwmMin[4], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_5", (void*)&paramRadio.pwmMin[5], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_6", (void*)&paramRadio.pwmMin[6], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MIN_7", (void*)&paramRadio.pwmMin[7], MIN_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_0", (void*)&paramRadio.pwmMax[0], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_1", (void*)&paramRadio.pwmMax[1], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_2", (void*)&paramRadio.pwmMax[2], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_3", (void*)&paramRadio.pwmMax[3], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_4", (void*)&paramRadio.pwmMax[4], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_5", (void*)&paramRadio.pwmMax[5], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_6", (void*)&paramRadio.pwmMax[6], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_MAX_7", (void*)&paramRadio.pwmMax[7], MAX_PULSEWIDTH),
		PARAM(UINT16,"RD_ZERO_0", (void*)&paramRadio.pwmZero[0], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_1", (void*)&paramRadio.pwmZero[1], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_2", (void*)&paramRadio.pwmZero[2], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_3", (void*)&paramRadio.pwmZero[3], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_4", (void*)&paramRadio.pwmZero[4], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_5", (void*)&paramRadio.pwmZero[5], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_6", (void*)&paramRadio.pwmZero[6], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_ZERO_7", (void*)&paramRadio.pwmZero[7], (MAX_PULSEWIDTH+MIN_PULSEWIDTH)>>1),
		PARAM(UINT16,"RD_REVERS", (void*)&paramRadio.reversed, 0),
		PARAM(REAL32,"ATT_KP_X", (void*)&paramAttCtrl.ctrl.axes[0].Kp, K_ATTCTRL_KP_0),
		PARAM(REAL32,"ATT_KP_Y", (void*)&paramAttCtrl.ctrl.axes[1].Kp, K_ATTCTRL_KP_1),
		PARAM(REAL32,"ATT_KP_Z", (void*)&paramAttCtrl.ctrl.axes[2].Kp, K_ATTCTRL_KP_2),
		PARAM(REAL32,"ATT_KD_X", (void*)&paramAttCtrl.ctrl.axes[0].Kd, K_ATTCTRL_KD_0),
		PARAM(REAL32,"ATT_KD_Y", (void*)&paramAttCtrl.ctrl.axes[1].Kd, K_ATTCTRL_KD_1),
		PARAM(REAL32,"ATT_KD_Z", (void*)&paramAttCtrl.ctrl.axes[2].Kd, K_ATTCTRL_KD_2),
		PARAM(REAL32,"ATT_KI_X", (void*)&paramAttCtrl.ctrl.axes[0].Ki, K_ATTCTRL_KI_0),
		PARAM(REAL32,"ATT_KI_Y", (void*)&paramAttCtrl.ctrl.axes[1].Ki, K_ATTCTRL_KI_1),
		PARAM(REAL32,"ATT_KI_Z", (void*)&paramAttCtrl.ctrl.axes[2].Ki, K_ATTCTRL_KI_2),
		PARAM(REAL32,"ATT_MAXI_X", (void*)&paramAttCtrl.ctrl.axes[0].maxI, K_ATTCTRL_MAXI_0),
		PARAM(REAL32,"ATT_MAXI_Y", (void*)&paramAttCtrl.ctrl.axes[1].maxI, K_ATTCTRL_MAXI_1),
		PARAM(REAL32,"ATT_MAXI_Z", (void*)&paramAttCtrl.ctrl.axes[2].maxI, K_ATTCTRL_MAXI_2),
		PARAM(REAL32,"ATT_FX_N0", (void*)&paramAttCtrl.filterX.a0, K_ATTCTRL_FILT_X_NUM_0),
		PARAM(REAL32,"ATT_FX_N1", (void*)&paramAttCtrl.filterX.a1, K_ATTCTRL_FILT_X_NUM_1),
		PARAM(REAL32,"ATT_FX_N2", (void*)&paramAttCtrl.filterX.a2, K_ATTCTRL_FILT_X_NUM_2),
		PARAM(REAL32,"ATT_FX_D1", (void*)&paramAttCtrl.filterX.b1, -K_ATTCTRL_FILT_X_DEN_1),
		PARAM(REAL32,"ATT_FX_D2", (void*)&paramAttCtrl.filterX.b2, -K_ATTCTRL_FILT_X_DEN_2),
		PARAM(REAL32,"ATT_FY_N0", (void*)&paramAttCtrl.filterY.a0, K_ATTCTRL_FILT_Y_NUM_0),
		PARAM(REAL32,"ATT_FY_N1", (void*)&paramAttCtrl.filterY.a1, K_ATTCTRL_FILT_Y_NUM_1),
		PARAM(REAL32,"ATT_FY_N2", (void*)&paramAttCtrl.filterY.a2, K_ATTCTRL_FILT_Y_NUM_2),
		PARAM(REAL32,"ATT_FY_D1", (void*)&paramAttCtrl.filterY.b1, -K_ATTCTRL_FILT_Y_DEN_1),
		PARAM(REAL32,"ATT_FY_D2", (void*)&paramAttCtrl.filterY.b2, -K_ATTCTRL_FILT_Y_DEN_2),
		PARAM(REAL32,"ATT_FZ_N0", (void*)&paramAttCtrl.filterZ.a0, K_ATTCTRL_FILT_Z_NUM_0),
		PARAM(REAL32,"ATT_FZ_N1", (void*)&paramAttCtrl.filterZ.a1, K_ATTCTRL_FILT_Z_NUM_1),
		PARAM(REAL32,"ATT_FZ_N2", (void*)&paramAttCtrl.filterZ.a2, K_ATTCTRL_FILT_Z_NUM_2),
		PARAM(REAL32,"ATT_FZ_D1", (void*)&paramAttCtrl.filterZ.b1, -K_ATTCTRL_FILT_Z_DEN_1),
		PARAM(REAL32,"ATT_FZ_D2", (void*)&paramAttCtrl.filterZ.b2, -K_ATTCTRL_FILT_Z_DEN_2),
		PARAM(INT32,"MOD_IM_FX0", (void*)&paramMod.mod.inflMat[0][0], K_MOD_INFLMAT_0_0),
		PARAM(INT32,"MOD_IM_FY0", (void*)&paramMod.mod.inflMat[0][1], K_MOD_INFLMAT_0_1),
		PARAM(INT32,"MOD_IM_FZ0", (void*)&paramMod.mod.inflMat[0][2], K_MOD_INFLMAT_0_2),
		PARAM(INT32,"MOD_IM_TX0", (void*)&paramMod.mod.inflMat[0][3], K_MOD_INFLMAT_0_3),
		PARAM(INT32,"MOD_IM_TY0", (void*)&paramMod.mod.inflMat[0][4], K_MOD_INFLMAT_0_4),
		PARAM(INT32,"MOD_IM_TZ0", (void*)&paramMod.mod.inflMat[0][5], K_MOD_INFLMAT_0_5),
		PARAM(INT32,"MOD_IM_FX1", (void*)&paramMod.mod.inflMat[1][0], K_MOD_INFLMAT_1_0),
		PARAM(INT32,"MOD_IM_FY1", (void*)&paramMod.mod.inflMat[1][1], K_MOD_INFLMAT_1_1),
		PARAM(INT32,"MOD_IM_FZ1", (void*)&paramMod.mod.inflMat[1][2], K_MOD_INFLMAT_1_2),
		PARAM(INT32,"MOD_IM_TX1", (void*)&paramMod.mod.inflMat[1][3], K_MOD_INFLMAT_1_3),
		PARAM(INT32,"MOD_IM_TY1", (void*)&paramMod.mod.inflMat[1][4], K_MOD_INFLMAT_1_4),
		PARAM(INT32,"MOD_IM_TZ1", (void*)&paramMod.mod.inflMat[1][5], K_MOD_INFLMAT_1_5),
		PARAM(INT32,"MOD_IM_FX2", (void*)&paramMod.mod.inflMat[2][0], K_MOD_INFLMAT_2_0),
		PARAM(INT32,"MOD_IM_FY2", (void*)&paramMod.mod.inflMat[2][1], K_MOD_INFLMAT_2_1),
		PARAM(INT32,"MOD_IM_FZ2", (void*)&paramMod.mod.inflMat[2][2], K_MOD_INFLMAT_2_2),
		PARAM(INT32,"MOD_IM_TX2", (void*)&paramMod.mod.inflMat[2][3], K_MOD_INFLMAT_2_3),
		PARAM(INT32,"MOD_IM_TY2", (void*)&paramMod.mod.inflMat[2][4], K_MOD_INFLMAT_2_4),
		PARAM(INT32,"MOD_IM_TZ2", (void*)&paramMod.mod.inflMat[2][5], K_MOD_INFLMAT_2_5),
		PARAM(INT32,"MOD_IM_FX3", (void*)&paramMod.mod.inflMat[3][0], K_MOD_INFLMAT_3_0),
		PARAM(INT32,"MOD_IM_FY3", (void*)&paramMod.mod.inflMat[3][1], K_MOD_INFLMAT_3_1),
		PARAM(INT32,"MOD_IM_FZ3", (void*)&paramMod.mod.inflMat[3][2], K_MOD_INFLMAT_3_2),
		PARAM(INT32,"MOD_IM_TX3", (void*)&paramMod.mod.inflMat[3][3], K_MOD_INFLMAT_3_3),
		PARAM(INT32,"MOD_IM_TY3", (void*)&paramMod.mod.inflMat[3][4], K_MOD_INFLMAT_3_4),
		PARAM(INT32,"MOD_IM_TZ3", (void*)&paramMod.mod.inflMat[3][5], K_MOD_INFLMAT_3_5),
		PARAM(INT32,"MOD_FMAX_X", (void*)&paramMod.mod.frcMaxPos_B[0], K_MOD_FMAXPOS_0),
		PARAM(INT32,"MOD_FMAX_Y", (void*)&paramMod.mod.frcMaxPos_B[1], K_MOD_FMAXPOS_1),
		PARAM(INT32,"MOD_FMAX_Z", (void*)&paramMod.mod.frcMaxPos_B[2], K_MOD_FMAXPOS_2),
		PARAM(INT32,"MOD_FMIN_X", (void*)&paramMod.mod.frcMaxNeg_B[0], K_MOD_FMAXNEG_0),
		PARAM(INT32,"MOD_FMIN_Y", (void*)&paramMod.mod.frcMaxNeg_B[1], K_MOD_FMAXNEG_1),
		PARAM(INT32,"MOD_FMIN_Z", (void*)&paramMod.mod.frcMaxNeg_B[2], K_MOD_FMAXNEG_2),
		PARAM(INT32,"MOD_TMAX_X", (void*)&paramMod.mod.trqMaxPos_B[0], K_MOD_TMAXPOS_0),
		PARAM(INT32,"MOD_TMAX_Y", (void*)&paramMod.mod.trqMaxPos_B[1], K_MOD_TMAXPOS_1),
		PARAM(INT32,"MOD_TMAX_Z", (void*)&paramMod.mod.trqMaxPos_B[2], K_MOD_TMAXPOS_2),
		PARAM(INT32,"MOD_TMIN_X", (void*)&paramMod.mod.trqMaxNeg_B[0], K_MOD_TMAXNEG_0),
		PARAM(INT32,"MOD_TMIN_Y", (void*)&paramMod.mod.trqMaxNeg_B[1], K_MOD_TMAXNEG_1),
		PARAM(INT32,"MOD_TMIN_Z", (void*)&paramMod.mod.trqMaxNeg_B[2], K_MOD_TMAXNEG_2),
		PARAM(UINT16,"MOD_MIN0", (void*)&paramMod.mod.minPwm[0], K_MOD_MIN0),
		PARAM(UINT16,"MOD_MIN1", (void*)&paramMod.mod.minPwm[1], K_MOD_MIN1),
		PARAM(UINT16,"MOD_MIN2", (void*)&paramMod.mod.minPwm[2], K_MOD_MIN2),
		PARAM(UINT16,"MOD_MIN3", (void*)&paramMod.mod.minPwm[3], K_MOD_MIN3),
		PARAM(INT32,"MOD_LUT_TXM0", (void*)&paramMod.lutTrq[0][0][0], K_MOD_LUTTRQ_0_0_0),
		PARAM(INT32,"MOD_LUT_TXM1", (void*)&paramMod.lutTrq[0][0][1], K_MOD_LUTTRQ_0_0_1),
		PARAM(INT32,"MOD_LUT_TXM2", (void*)&paramMod.lutTrq[0][0][2], K_MOD_LUTTRQ_0_0_2),
		PARAM(INT32,"MOD_LUT_TXM3", (void*)&paramMod.lutTrq[0][0][3], K_MOD_LUTTRQ_0_0_3),
		PARAM(INT32,"MOD_LUT_TYM0", (void*)&paramMod.lutTrq[0][1][0], K_MOD_LUTTRQ_0_1_0),
		PARAM(INT32,"MOD_LUT_TYM1", (void*)&paramMod.lutTrq[0][1][1], K_MOD_LUTTRQ_0_1_1),
		PARAM(INT32,"MOD_LUT_TYM2", (void*)&paramMod.lutTrq[0][1][2], K_MOD_LUTTRQ_0_1_2),
		PARAM(INT32,"MOD_LUT_TYM3", (void*)&paramMod.lutTrq[0][1][3], K_MOD_LUTTRQ_0_1_3),
		PARAM(INT32,"MOD_LUT_TZM0", (void*)&paramMod.lutTrq[0][2][0], K_MOD_LUTTRQ_0_2_0),
		PARAM(INT32,"MOD_LUT_TZM1", (void*)&paramMod.lutTrq[0][2][1], K_MOD_LUTTRQ_0_2_1),
		PARAM(INT32,"MOD_LUT_TZM2", (void*)&paramMod.lutTrq[0][2][2], K_MOD_LUTTRQ_0_2_2),
		PARAM(INT32,"MOD_LUT_TZM3", (void*)&paramMod.lutTrq[0][2][3], K_MOD_LUTTRQ_0_2_3),
		PARAM(INT32,"MOD_LUT_TXP0", (void*)&paramMod.lutTrq[1][0][0], K_MOD_LUTTRQ_1_0_0),
		PARAM(INT32,"MOD_LUT_TXP1", (void*)&paramMod.lutTrq[1][0][1], K_MOD_LUTTRQ_1_0_1),
		PARAM(INT32,"MOD_LUT_TXP2", (void*)&paramMod.lutTrq[1][0][2], K_MOD_LUTTRQ_1_0_2),
		PARAM(INT32,"MOD_LUT_TXP3", (void*)&paramMod.lutTrq[1][0][3], K_MOD_LUTTRQ_1_0_3),
		PARAM(INT32,"MOD_LUT_TYP0", (void*)&paramMod.lutTrq[1][1][0], K_MOD_LUTTRQ_1_1_0),
		PARAM(INT32,"MOD_LUT_TYP1", (void*)&paramMod.lutTrq[1][1][1], K_MOD_LUTTRQ_1_1_1),
		PARAM(INT32,"MOD_LUT_TYP2", (void*)&paramMod.lutTrq[1][1][2], K_MOD_LUTTRQ_1_1_2),
		PARAM(INT32,"MOD_LUT_TYP3", (void*)&paramMod.lutTrq[1][1][3], K_MOD_LUTTRQ_1_1_3),
		PARAM(INT32,"MOD_LUT_TZP0", (void*)&paramMod.lutTrq[1][2][0], K_MOD_LUTTRQ_1_2_0),
		PARAM(INT32,"MOD_LUT_TZP1", (void*)&paramMod.lutTrq[1][2][1], K_MOD_LUTTRQ_1_2_1),
		PARAM(INT32,"MOD_LUT_TZP2", (void*)&paramMod.lutTrq[1][2][2], K_MOD_LUTTRQ_1_2_2),
		PARAM(INT32,"MOD_LUT_TZP3", (void*)&paramMod.lutTrq[1][2][3], K_MOD_LUTTRQ_1_2_3),
		PARAM(INT32,"MOD_LUT_FXM0", (void*)&paramMod.lutFrc[0][0][0], K_MOD_LUTFRC_0_0_0),
		PARAM(INT32,"MOD_LUT_FXM1", (void*)&paramMod.lutFrc[0][0][1], K_MOD_LUTFRC_0_0_1),
		PARAM(INT32,"MOD_LUT_FXM2", (void*)&paramMod.lutFrc[0][0][2], K_MOD_LUTFRC_0_0_2),
		PARAM(INT32,"MOD_LUT_FXM3", (void*)&paramMod.lutFrc[0][0][3], K_MOD_LUTFRC_0_0_3),
		PARAM(INT32,"MOD_LUT_FYM0", (void*)&paramMod.lutFrc[0][1][0], K_MOD_LUTFRC_0_1_0),
		PARAM(INT32,"MOD_LUT_FYM1", (void*)&paramMod.lutFrc[0][1][1], K_MOD_LUTFRC_0_1_1),
		PARAM(INT32,"MOD_LUT_FYM2", (void*)&paramMod.lutFrc[0][1][2], K_MOD_LUTFRC_0_1_2),
		PARAM(INT32,"MOD_LUT_FYM3", (void*)&paramMod.lutFrc[0][1][3], K_MOD_LUTFRC_0_1_3),
		PARAM(INT32,"MOD_LUT_FZM0", (void*)&paramMod.lutFrc[0][2][0], K_MOD_LUTFRC_0_2_0),
		PARAM(INT32,"MOD_LUT_FZM1", (void*)&paramMod.lutFrc[0][2][1], K_MOD_LUTFRC_0_2_1),
		PARAM(INT32,"MOD_LUT_FZM2", (void*)&paramMod.lutFrc[0][2][2], K_MOD_LUTFRC_0_2_2),
		PARAM(INT32,"MOD_LUT_FZM3", (void*)&paramMod.lutFrc[0][2][3], K_MOD_LUTFRC_0_2_3),
		PARAM(INT32,"MOD_LUT_FXP0", (void*)&paramMod.lutFrc[1][0][0], K_MOD_LUTFRC_1_0_0),
		PARAM(INT32,"MOD_LUT_FXP1", (void*)&paramMod.lutFrc[1][0][1], K_MOD_LUTFRC_1_0_1),
		PARAM(INT32,"MOD_LUT_FXP2", (void*)&paramMod.lutFrc[1][0][2], K_MOD_LUTFRC_1_0_2),
		PARAM(INT32,"MOD_LUT_FXP3", (void*)&paramMod.lutFrc[1][0][3], K_MOD_LUTFRC_1_0_3),
		PARAM(INT32,"MOD_LUT_FYP0", (void*)&paramMod.lutFrc[1][1][0], K_MOD_LUTFRC_1_1_0),
		PARAM(INT32,"MOD_LUT_FYP1", (void*)&paramMod.lutFrc[1][1][1], K_MOD_LUTFRC_1_1_1),
		PARAM(INT32,"MOD_LUT_FYP2", (void*)&paramMod.lutFrc[1][1][2], K_MOD_LUTFRC_1_1_2),
		PARAM(INT32,"MOD_LUT_FYP3", (void*)&paramMod.lutFrc[1][1][3], K_MOD_LUTFRC_1_1_3),
		PARAM(INT32,"MOD_LUT_FZP0", (void*)&paramMod.lutFrc[1][2][0], K_MOD_LUTFRC_1_2_0),
		PARAM(INT32,"MOD_LUT_FZP1", (void*)&paramMod.lutFrc[1][2][1], K_MOD_LUTFRC_1_2_1),
		PARAM(INT32,"MOD_LUT_FZP2", (void*)&paramMod.lutFrc[1][2][2], K_MOD_LUTFRC_1_2_2),
		PARAM(INT32,"MOD_LUT_FZP3", (void*)&paramMod.lutFrc[1][2][3], K_MOD_LUTFRC_1_2_3),
		PARAM(REAL32,"EA_ANG_ACC", (void*)&paramEst.gainAttAngAcco, EST_GAIN_ACCO_ANGLE),
		PARAM(REAL32,"EA_DRI_ACC", (void*)&paramEst.gainAttDriftAcco, EST_GAIN_ACCO_DRIFT),
		PARAM(REAL32,"EA_ANG_CMP", (void*)&paramEst.gainAttAngCompass, EST_GAIN_COMPASS_ANGLE),
		PARAM(REAL32,"EA_DRI_CMP", (void*)&paramEst.gainAttDriftCompass, EST_GAIN_COMPASS_DRIFT),
		PARAM(REAL32,"DYN_INER_XX", (void*)&paramDyn.diagInertia[0], K_DYN_INER_XX),
		PARAM(REAL32,"DYN_INER_YY", (void*)&paramDyn.diagInertia[1], K_DYN_INER_YY),
		PARAM(REAL32,"DYN_INER_ZZ", (void*)&paramDyn.diagInertia[2], K_DYN_INER_ZZ),
		PARAM(REAL32,"DYN_COM_X", (void*)&paramDyn.comPositionB[0], K_DYN_COM_X),
		PARAM(REAL32,"DYN_COM_Y", (void*)&paramDyn.comPositionB[1], K_DYN_COM_Y),
		PARAM(REAL32,"DYN_COM_Z", (void*)&paramDyn.comPositionB[2], K_DYN_COM_Z),
		PARAM(REAL32,"DYN_MASS", (void*)&paramDyn.mass, K_DYN_MASS)
};

uint16_t paramCount = 151;

} /* namespace system */


